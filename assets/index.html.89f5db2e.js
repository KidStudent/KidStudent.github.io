import{_ as n}from"./add-router-dynamic.f8f4bf45.js";import{_ as s,o as a,c as t,a as p}from"./app.5c0a263e.js";const e={},o=p(`<h1 id="路由和菜单" tabindex="-1"><a class="header-anchor" href="#路由和菜单" aria-hidden="true">#</a> 路由和菜单</h1><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/examples&#39;</span><span class="token punctuation">,</span> <span class="token comment">//路由地址 ·必填·</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;examples&#39;</span><span class="token punctuation">,</span> <span class="token comment">//路由名字与组件中的\`name\` 保持一致 ·必填·</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;组件库&#39;</span><span class="token punctuation">,</span> <span class="token comment">//展示名称 ·必填·</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">//id不可重复 ·必填·</span>
  <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">//父级菜单id ·可选·</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">//对应的组件 ·可选·</span>
  <span class="token literal-property property">iconName</span><span class="token operator">:</span> <span class="token string">&#39;zichanzhongxin&#39;</span><span class="token punctuation">,</span> <span class="token comment">//菜单图标 ·可选·</span>
  <span class="token literal-property property">isExternalLink</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//是否外部网站链接 如果是外部网站链接可以在nav-header中额外处理 ·可选·</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统中如何生成路由菜单" tabindex="-1"><a class="header-anchor" href="#系统中如何生成路由菜单" aria-hidden="true">#</a> 系统中如何生成路由菜单</h2><h3 id="初始化菜单" tabindex="-1"><a class="header-anchor" href="#初始化菜单" aria-hidden="true">#</a> 初始化菜单</h3><p>在 <code>src/router/index.js</code> 中已经初始化了默认的基础路由</p><h3 id="前端静态路由" tabindex="-1"><a class="header-anchor" href="#前端静态路由" aria-hidden="true">#</a> 前端静态路由</h3><p>在 <code>src/router/index.js</code> 中可以直接添加，也可以在 <code>src/stores/modules/permission.js</code>中按需引入，例如 <code>examplesRoutes</code></p><h3 id="从后端中获取路由" tabindex="-1"><a class="header-anchor" href="#从后端中获取路由" aria-hidden="true">#</a> 从后端中获取路由</h3><p>在 <code>系统管理</code> 中添加，找到对应的应用系统，新增模块，如下图</p><p><img src="`+n+`" alt="add-router-dynamic"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>父层级 —— 同配置项parentId
层级名称 —— 同配置项name
资源编码 —— 可随意填写，只要没有报重复即可
权限标识 —— 用来做权限控制一般与name保持一致，具体使用方法见 权限章节
路由地址 —— 同配置项component
是否外链 —— 同配置项isExternalLink
图标 —— 同配置项iconName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由处理机制" tabindex="-1"><a class="header-anchor" href="#路由处理机制" aria-hidden="true">#</a> 路由处理机制</h2><h3 id="加载静态路由" tabindex="-1"><a class="header-anchor" href="#加载静态路由" aria-hidden="true">#</a> 加载静态路由</h3><p>由 <code>src/router/index.js</code> 加载静态路由</p><h3 id="动态添加路由" tabindex="-1"><a class="header-anchor" href="#动态添加路由" aria-hidden="true">#</a> 动态添加路由</h3><p>在 <code>src/router/guard.js</code> 路由钩子函数中，调用 <code>src/stores/modules/permission.js</code> 中的 <code>setRouterList</code> 方法从后端获取菜单路由并处理一部分字段</p><p><code>guard.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">_getRoutes</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> permissionStore <span class="token operator">=</span> <span class="token function">usePermissionStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">setRouterList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> accessRoutes <span class="token operator">=</span> <span class="token function">getAsyncRoutes</span><span class="token punctuation">(</span>permissionStore<span class="token punctuation">.</span>routerList<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessRoutes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 动态添加格式化过的路由</span>
      accessRoutes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> redirectRoute <span class="token operator">=</span> accessRoutes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token operator">...</span>redirectRoute<span class="token punctuation">,</span>
          <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath<span class="token punctuation">,</span>
          <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">query</span><span class="token operator">:</span> to<span class="token punctuation">.</span>query<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      Message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;该用户未分配菜单权限,请联系管理员分配！&#39;</span><span class="token punctuation">)</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">redirect</span><span class="token operator">:</span> router<span class="token punctuation">.</span>currentRoute<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//登录成功后跳入浏览的当前页面</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">redirect</span><span class="token operator">:</span> router<span class="token punctuation">.</span>currentRoute<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//登录成功后跳入浏览的当前页面</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>permission.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">setRouterList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> commonStore <span class="token operator">=</span> <span class="token function">useCommonStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> examples <span class="token operator">=</span> <span class="token function">useExamplesRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 获取iVDG的菜单信息等</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> userStore<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 只返回页面或模块菜单</span>
    <span class="token keyword">const</span> menus <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>resourceVoList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>resourceType <span class="token operator">===</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">||</span> row<span class="token punctuation">.</span>resourceType <span class="token operator">===</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> datascopeVoList <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>datascopeVoList<span class="token punctuation">;</span>
    <span class="token keyword">const</span> permissions <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>permissions<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>routerList <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> row<span class="token punctuation">.</span>componentUrl <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>resourceUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> row<span class="token punctuation">.</span>resourceUrl<span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> row<span class="token punctuation">.</span>resourceCname<span class="token punctuation">,</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> row<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
        <span class="token literal-property property">parentId</span><span class="token operator">:</span> row<span class="token punctuation">.</span>parentId<span class="token punctuation">,</span>
        <span class="token literal-property property">component</span><span class="token operator">:</span> row<span class="token punctuation">.</span>componentUrl <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>resourceUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">//路由对应文件</span>
        <span class="token literal-property property">iconName</span><span class="token operator">:</span> <span class="token function">geticonClassName</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>iconUrl<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//菜单图标</span>
        <span class="token literal-property property">isExternalLink</span><span class="token operator">:</span> row<span class="token punctuation">.</span>isExternalLink<span class="token punctuation">,</span> <span class="token comment">//是否外部网站链接</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>routerList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>routerList<span class="token punctuation">,</span> <span class="token operator">...</span>examples<span class="token punctuation">.</span>routerList<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>routerTreeList <span class="token operator">=</span> <span class="token function">arrayToJson</span><span class="token punctuation">(</span><span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>routerList<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>permissions <span class="token operator">=</span> permissions<span class="token punctuation">;</span>
    commonStore<span class="token punctuation">.</span><span class="token function">setOrganizationList</span><span class="token punctuation">(</span>datascopeVoList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后通过 <code>src/router/asyncRouter.js</code> 处理获取到的菜单路由列表，将字段转化为 <code>vue-router</code> 所需的字段，并生成重定向路由</p><p><code>asyncRouter.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&#39;../views/**/*.vue&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 引入路由文件这种的公共路由</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getAsyncRoutes</span><span class="token punctuation">(</span><span class="token parameter">routes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// 定义路由中需要的自定名</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;children&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;redirect&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;meta&#39;</span><span class="token punctuation">]</span>
  <span class="token comment">// 遍历路由数组去重组可用的路由</span>
  routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    newItem<span class="token punctuation">.</span>component <span class="token operator">=</span> modules<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../views</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newItem<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> hasChild <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>parentId <span class="token operator">===</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token comment">// 若遍历的当前路由存在子路由，需要对子路由进行递归遍历</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasChild <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> redirect <span class="token operator">=</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> item<span class="token punctuation">)</span>
      newItem<span class="token punctuation">.</span>redirect <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> redirect<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 动态添加重定向路由</span>
  res<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 返回处理好且可用的路由数组</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> route<span class="token punctuation">,</span> redirect <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> redirectRoute <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>parentId <span class="token operator">===</span> route<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>redirectRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    redirect <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>redirectRoute<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">return</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> redirectRoute<span class="token punctuation">,</span> redirect<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> redirect
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),c=[o];function i(l,u){return a(),t("div",null,c)}const d=s(e,[["render",i],["__file","index.html.vue"]]);export{d as default};
