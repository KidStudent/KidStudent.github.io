import{_ as n,o as s,c as a,e as t}from"./app.cc3919a2.js";const p={},e=t(`<h1 id="开发" tabindex="-1"><a class="header-anchor" href="#开发" aria-hidden="true">#</a> 开发</h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token comment">// src/views/login/login.vue</span>
<span class="token keyword">async</span> <span class="token function">PKILogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>loginForm<span class="token punctuation">.</span>agreement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">noticePrivacyPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token keyword">let</span> original <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOriginal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>original<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// VCTK初始化参数，数据可从网关系统：认证管理-&gt;Key类型管理中导出</span>
            <span class="token comment">// 调用网关工具脚本中的detachSignStr方法进行签名，返回签名结果</span>
            <span class="token comment">// 参数说明：initParam：vctk控件初始化参数，authContent：认证原文，signSubject：证书版本者主题</span>
            <span class="token keyword">let</span> signResult <span class="token operator">=</span> <span class="token function">detachSignStr</span><span class="token punctuation">(</span><span class="token constant">INIT_PARAM</span><span class="token punctuation">,</span> original<span class="token punctuation">.</span>original<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>signResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">.</span>original <span class="token operator">=</span> original<span class="token punctuation">.</span>original
                <span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">.</span>originalData <span class="token operator">=</span> original<span class="token punctuation">.</span>original_data
                <span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">.</span>signedData <span class="token operator">=</span> signResult
                <span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">.</span>authMode <span class="token operator">=</span> <span class="token constant">AUTH_MODE</span><span class="token punctuation">.</span>cert
                <span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">.</span>remoteAddr <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname
                <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPKIAuth</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>certAuth<span class="token punctuation">)</span>
                <span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token constant">CN</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getPKIUserInfo
                <span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> IDNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">CN</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">yhId</span><span class="token operator">:</span> IDNumber
                <span class="token punctuation">}</span>
                <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">thirdPartyLogin</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
                <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token string">&#39;from-login&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1、获取随机数" tabindex="-1"><a class="header-anchor" href="#_1、获取随机数" aria-hidden="true">#</a> 1、获取随机数</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">getOriginal</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getOriginal</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token string">&quot;获取随机数失败&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、调用-detachsignstr-签名" tabindex="-1"><a class="header-anchor" href="#_2、调用-detachsignstr-签名" aria-hidden="true">#</a> 2、调用 detachSignStr 签名</h2><h2 id="_3、获取认证信息" tabindex="-1"><a class="header-anchor" href="#_3、获取认证信息" aria-hidden="true">#</a> 3、获取认证信息</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">async</span> <span class="token function">getPKIAuth</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span><span class="token punctuation">,</span> params</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPKIAuth</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>certAttributeNodeMap<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">let</span> userInfoList <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>certAttributeNodeMap<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> userInfo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        userInfoList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span>
            userInfo<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;setPKIUserInfo&quot;</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token string">&quot;获取认证信息失败&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、登录" tabindex="-1"><a class="header-anchor" href="#_4、登录" aria-hidden="true">#</a> 4、登录</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">thirdPartyLogin</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>commit<span class="token punctuation">}</span><span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">thirdPartyLogin</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;setToken&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>access_token<span class="token punctuation">)</span>
        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;setTokenDetail&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","index.html.vue"]]);export{k as default};
