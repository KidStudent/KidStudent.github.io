import{_ as i,r as c,o as l,c as r,a as s,b as n,d as a,w as e,e as o}from"./app.9b5e849f.js";const u="/images/guide/router-menu/add-router-dynamic.png",d="/images/guide/router-menu/router-before.png",k={},m=o(`<h1 id="路由和菜单" tabindex="-1"><a class="header-anchor" href="#路由和菜单" aria-hidden="true">#</a> 路由和菜单</h1><h2 id="系统中如何生成路由菜单" tabindex="-1"><a class="header-anchor" href="#系统中如何生成路由菜单" aria-hidden="true">#</a> 系统中如何生成路由菜单</h2><h3 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/examples&#39;</span><span class="token punctuation">,</span> <span class="token comment">//路由地址 ·必填·</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;examples&#39;</span><span class="token punctuation">,</span> <span class="token comment">//路由名字与组件中的\`name\` 保持一致 ·必填·</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;组件库&#39;</span><span class="token punctuation">,</span> <span class="token comment">//展示名称 ·必填·</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">//id不可重复 ·必填·</span>
  <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">//父级菜单id ·可选·</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">//对应的组件 ·可选·</span>
  <span class="token literal-property property">iconName</span><span class="token operator">:</span> <span class="token string">&#39;zichanzhongxin&#39;</span><span class="token punctuation">,</span> <span class="token comment">//菜单图标 ·可选·</span>
  <span class="token literal-property property">isExternalLink</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//是否外部网站链接 如果是外部网站链接可以在nav-header中额外处理 ·可选·</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态路由" tabindex="-1"><a class="header-anchor" href="#静态路由" aria-hidden="true">#</a> 静态路由</h3><p>在 <code>src/router/index.js</code> 中可以直接添加，也可以在 <code>src/stores/modules/permission.js</code>中按需引入，例如 <code>examplesRoutes</code></p><h3 id="动态路由" tabindex="-1"><a class="header-anchor" href="#动态路由" aria-hidden="true">#</a> 动态路由</h3><p>在 <code>系统管理</code> 中添加，找到对应的应用系统，新增模块，如下图</p><p><img src="`+u+`" alt="add-router-dynamic"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>父层级 —— 同配置项parentId
层级名称 —— 同配置项name
资源编码 —— 可随意填写，只要没有报重复即可
权限标识 —— 用来做权限控制一般与name保持一致，具体使用方法见 权限章节
路由地址 —— 同配置项component
是否外链 —— 同配置项isExternalLink
图标 —— 同配置项iconName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>src/router/guard.js</code> 路由钩子函数中，调用 <code>src/stores/modules/permission.js</code> 中的 <code>setRouterList</code> 方法从后端获取菜单路由并处理一部分字段</p>`,11),v={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L96",target:"_blank",rel:"noopener noreferrer"},b=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">_getRoutes</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> permissionStore <span class="token operator">=</span> <span class="token function">usePermissionStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">setRouterList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> accessRoutes <span class="token operator">=</span> <span class="token function">getAsyncRoutes</span><span class="token punctuation">(</span>permissionStore<span class="token punctuation">.</span>routerList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessRoutes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 动态添加格式化过的路由</span>
      accessRoutes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token doc-comment comment">/**
       * 如果有重定向路由则直接跳转到重定向
       */</span>
      <span class="token keyword">const</span> query <span class="token operator">=</span> to<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
      <span class="token keyword">const</span> redirect <span class="token operator">=</span> to<span class="token punctuation">.</span>query<span class="token punctuation">.</span>redirect<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>redirect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> query<span class="token punctuation">.</span>redirect<span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> redirect<span class="token punctuation">,</span>
          <span class="token literal-property property">query</span><span class="token operator">:</span> query<span class="token punctuation">,</span>
          <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token doc-comment comment">/**
       * 由于路由是动态创建的，初次进入时还未载入，这时会进入到404页面中
       * 路由动态添加完成后需要重新载入要进入的路由，
       * 如果是重定向路由，从缓存的路由列表中找到需要重定向进入的路由
       * 如果是指定路由则替换即可
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> redirectRoute <span class="token operator">=</span> accessRoutes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token operator">...</span>redirectRoute<span class="token punctuation">,</span>
          <span class="token literal-property property">query</span><span class="token operator">:</span> query<span class="token punctuation">,</span>
          <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath<span class="token punctuation">,</span>
          <span class="token literal-property property">query</span><span class="token operator">:</span> to<span class="token punctuation">.</span>query<span class="token punctuation">,</span>
          <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      Message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;该用户未分配菜单权限,请联系管理员分配！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/stores/modules/permission.js#L34",target:"_blank",rel:"noopener noreferrer"},h=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">setRouterList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> commonStore <span class="token operator">=</span> <span class="token function">UseCommonStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> examples <span class="token operator">=</span> <span class="token function">useExamplesRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取菜单信息等</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> userStore<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 只返回页面或模块菜单</span>
    <span class="token keyword">const</span> menus <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>resourceVoList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>resourceType <span class="token operator">===</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">||</span> row<span class="token punctuation">.</span>resourceType <span class="token operator">===</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> datascopeVoList <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>datascopeVoList<span class="token punctuation">;</span>
    <span class="token keyword">const</span> permissions <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>permissions<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>routerList <span class="token operator">=</span> menus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> row<span class="token punctuation">.</span>componentUrl <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>resourceUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> row<span class="token punctuation">.</span>resourceUrl<span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> row<span class="token punctuation">.</span>resourceCname<span class="token punctuation">,</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> row<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
        <span class="token literal-property property">parentId</span><span class="token operator">:</span> row<span class="token punctuation">.</span>parentId<span class="token punctuation">,</span>
        <span class="token literal-property property">component</span><span class="token operator">:</span> row<span class="token punctuation">.</span>componentUrl <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>row<span class="token punctuation">.</span>resourceUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">//路由对应文件</span>
        <span class="token literal-property property">iconName</span><span class="token operator">:</span> <span class="token function">geticonClassName</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>iconUrl<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//菜单图标</span>
        <span class="token literal-property property">isExternalLink</span><span class="token operator">:</span> row<span class="token punctuation">.</span>isExternalLink<span class="token punctuation">,</span> <span class="token comment">//是否外部网站链接</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>routerList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>routerList<span class="token punctuation">,</span> <span class="token operator">...</span>examples<span class="token punctuation">.</span>routerList<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>routerTreeList <span class="token operator">=</span> <span class="token function">arrayToJson</span><span class="token punctuation">(</span><span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>routerList<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>permissions <span class="token operator">=</span> permissions<span class="token punctuation">;</span>
    commonStore<span class="token punctuation">.</span><span class="token function">setOrganizationList</span><span class="token punctuation">(</span>datascopeVoList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后通过 <code>src/router/asyncRouter.js</code> 处理获取到的菜单路由列表，将字段转化为 <code>vue-router</code> 所需的字段，并生成重定向路由</p><p><code>asyncRouter.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&#39;../views/**/*.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 引入路由文件这种的公共路由</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getAsyncRoutes</span><span class="token punctuation">(</span><span class="token parameter">routes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 定义路由中需要的自定名</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;children&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;redirect&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;meta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 遍历路由数组去重组可用的路由</span>
  routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    newItem<span class="token punctuation">.</span>component <span class="token operator">=</span> modules<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../views</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newItem<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> hasChild <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>parentId <span class="token operator">===</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 若遍历的当前路由存在子路由，需要对子路由进行递归遍历</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasChild <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> redirect <span class="token operator">=</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      newItem<span class="token punctuation">.</span>redirect <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> redirect<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 动态添加重定向路由</span>
  res<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 返回处理好且可用的路由数组</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> route<span class="token punctuation">,</span> redirect <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> redirectRoute <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>parentId <span class="token operator">===</span> route<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>redirectRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    redirect <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>redirectRoute<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getRedirect</span><span class="token punctuation">(</span>routes<span class="token punctuation">,</span> redirectRoute<span class="token punctuation">,</span> redirect<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> redirect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),B={id:"全局前置守卫-guard-js",tabindex:"-1"},_=s("a",{class:"header-anchor",href:"#全局前置守卫-guard-js","aria-hidden":"true"},"#",-1),g={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js",target:"_blank",rel:"noopener noreferrer"},f=s("p",null,"当一个导航触发时，需要根据系统是否授权、用户是否登录、动态路由创建等触发以下步骤",-1),y={id:"_1-跳转路由清空所有的异步请求",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#_1-跳转路由清空所有的异步请求","aria-hidden":"true"},"#",-1),w={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L14",target:"_blank",rel:"noopener noreferrer"},x={id:"_2-系统是否授权",tabindex:"-1"},F=s("a",{class:"header-anchor",href:"#_2-系统是否授权","aria-hidden":"true"},"#",-1),j={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L20",target:"_blank",rel:"noopener noreferrer"},L=s("p",null,"没有授权信息就去获取授权信息",-1),D={id:"_3-获取系统信息",tabindex:"-1"},C=s("a",{class:"header-anchor",href:"#_3-获取系统信息","aria-hidden":"true"},"#",-1),R={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L56",target:"_blank",rel:"noopener noreferrer"},q={id:"_4-单点登录",tabindex:"-1"},I=s("a",{class:"header-anchor",href:"#_4-单点登录","aria-hidden":"true"},"#",-1),S={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L57",target:"_blank",rel:"noopener noreferrer"},U={id:"_5-判断登录状态、动态路由是否添加",tabindex:"-1"},N=s("a",{class:"header-anchor",href:"#_5-判断登录状态、动态路由是否添加","aria-hidden":"true"},"#",-1),V={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L58",target:"_blank",rel:"noopener noreferrer"},T={id:"_6-没有登录、没有添加动态路由",tabindex:"-1"},$=s("a",{class:"header-anchor",href:"#_6-没有登录、没有添加动态路由","aria-hidden":"true"},"#",-1),z={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L78",target:"_blank",rel:"noopener noreferrer"},P={id:"_7-记录需要登录后跳转的页面",tabindex:"-1"},J=s("a",{class:"header-anchor",href:"#_7-记录需要登录后跳转的页面","aria-hidden":"true"},"#",-1),M={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L85",target:"_blank",rel:"noopener noreferrer"},O={id:"_8-已经登录、没有添加动态路由",tabindex:"-1"},G=s("a",{class:"header-anchor",href:"#_8-已经登录、没有添加动态路由","aria-hidden":"true"},"#",-1),H={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L77",target:"_blank",rel:"noopener noreferrer"},K={id:"_9-添加动态路由",tabindex:"-1"},Q=s("a",{class:"header-anchor",href:"#_9-添加动态路由","aria-hidden":"true"},"#",-1),W={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L96",target:"_blank",rel:"noopener noreferrer"},X={id:"_10-跳转重定向",tabindex:"-1"},Y=s("a",{class:"header-anchor",href:"#_10-跳转重定向","aria-hidden":"true"},"#",-1),Z={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L107",target:"_blank",rel:"noopener noreferrer"},nn={id:"_11-已经登录、已经添加动态路由进入页面",tabindex:"-1"},sn=s("a",{class:"header-anchor",href:"#_11-已经登录、已经添加动态路由进入页面","aria-hidden":"true"},"#",-1),an={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/router/guard.js#L61",target:"_blank",rel:"noopener noreferrer"},tn=s("h3",{id:"单点登录流程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#单点登录流程","aria-hidden":"true"},"#"),n(" 单点登录流程")],-1),en=s("code",null,"http://127.0.0.1:8888/login?token=001",-1),pn=s("h3",{id:"普通登录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#普通登录","aria-hidden":"true"},"#"),n(" 普通登录")],-1),on=s("p",null,[n("浏览器输入 "),s("code",null,"http://127.0.0.1:8888/login"),n(" =>")],-1),cn=s("code",null,"login",-1),ln=s("code",null,"token",-1),rn=s("h3",{id:"重定向登录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#重定向登录","aria-hidden":"true"},"#"),n(" 重定向登录")],-1),un=s("p",null,[n("浏览器输入 "),s("code",null,"http://127.0.0.1:8888/home"),n(" =>")],-1),dn=s("code",null,"login",-1),kn=s("code",null,"token",-1),mn=s("h3",{id:"已登录状态下刷新页面",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#已登录状态下刷新页面","aria-hidden":"true"},"#"),n(" 已登录状态下刷新页面")],-1),vn=s("h3",{id:"流程图",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#流程图","aria-hidden":"true"},"#"),n(" 流程图")],-1),bn=s("p",null,[s("img",{src:d,alt:"router-before-each"})],-1);function En(hn,Bn){const p=c("ExternalLinkIcon"),t=c("RouterLink");return l(),r("div",null,[m,s("p",null,[s("a",v,[n("guard.js"),a(p)])]),b,s("p",null,[s("a",E,[n("permission.js"),a(p)])]),h,s("h2",B,[_,n(" 全局前置守卫 "),s("a",g,[n("guard.js"),a(p)])]),f,s("h6",y,[A,n(" ⒈ "),s("a",w,[n("跳转路由清空所有的异步请求"),a(p)])]),s("h6",x,[F,n(" ⒉ "),s("a",j,[n("系统是否授权"),a(p)])]),L,s("h6",D,[C,n(" ⒊ "),s("a",R,[n("获取系统信息"),a(p)])]),s("h6",q,[I,n(" ⒋ "),s("a",S,[n("单点登录"),a(p)])]),s("h6",U,[N,n(" ⒌ "),s("a",V,[n("判断登录状态、动态路由是否添加"),a(p)])]),s("h6",T,[$,n(" ⒍ "),s("a",z,[n("没有登录、没有添加动态路由"),a(p)])]),s("h6",P,[J,n(" ⒎ "),s("a",M,[n("记录需要登录后跳转的页面"),a(p)])]),s("h6",O,[G,n(" ⒏ "),s("a",H,[n("已经登录、没有添加动态路由"),a(p)])]),s("h6",K,[Q,n(" ⒐ "),s("a",W,[n("添加动态路由"),a(p)])]),s("h6",X,[Y,n(" ⒑ "),s("a",Z,[n("跳转重定向"),a(p)])]),s("h6",nn,[sn,n(" ⒒ "),s("a",an,[n("已经登录、已经添加动态路由进入页面"),a(p)])]),tn,s("p",null,[n("浏览器输入 "),en,n(" => "),a(t,{to:"/guide/router-menu/#_1-%E8%B7%B3%E8%BD%AC%E8%B7%AF%E7%94%B1%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82"},{default:e(()=>[n("⒈ 跳转路由清空所有的异步请求")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_2-%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%90%A6%E6%8E%88%E6%9D%83"},{default:e(()=>[n("⒉ 系统是否授权")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_3-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF"},{default:e(()=>[n("⒊ 获取系统信息")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_4-%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95"},{default:e(()=>[n("⒋ 单点登录")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_8-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒏ 已经登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_9-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒐ 添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_11-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E5%B7%B2%E7%BB%8F%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2"},{default:e(()=>[n("⒒ 已经登录、已经添加动态路由进入页面")]),_:1})]),pn,on,s("p",null,[a(t,{to:"/guide/router-menu/#_1-%E8%B7%B3%E8%BD%AC%E8%B7%AF%E7%94%B1%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82"},{default:e(()=>[n("⒈ 跳转路由清空所有的异步请求")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_2-%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%90%A6%E6%8E%88%E6%9D%83"},{default:e(()=>[n("⒉ 系统是否授权")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_6-%E6%B2%A1%E6%9C%89%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒍ 没有登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_3-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF"},{default:e(()=>[n("⒊ 获取系统信息")]),_:1}),n(" => 进入 "),cn,n(" 页面，输入用户名和密码点击登录，存入 "),ln,n(" 信息 => "),a(t,{to:"/guide/router-menu/#_8-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒏ 已经登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_9-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒐ 添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_11-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E5%B7%B2%E7%BB%8F%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2"},{default:e(()=>[n("⒒ 已经登录、已经添加动态路由进入页面")]),_:1})]),rn,un,s("p",null,[a(t,{to:"/guide/router-menu/#_1-%E8%B7%B3%E8%BD%AC%E8%B7%AF%E7%94%B1%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82"},{default:e(()=>[n("⒈ 跳转路由清空所有的异步请求")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_2-%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%90%A6%E6%8E%88%E6%9D%83"},{default:e(()=>[n("⒉ 系统是否授权")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_3-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF"},{default:e(()=>[n("⒊ 获取系统信息")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_6-%E6%B2%A1%E6%9C%89%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒍ 没有登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_7-%E8%AE%B0%E5%BD%95%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95%E5%90%8E%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%A1%B5%E9%9D%A2"},{default:e(()=>[n("⒎ 记录需要登录后跳转的页面")]),_:1}),n(" => 进入 "),dn,n(" 页面，输入用户名和密码点击登录，存入 "),kn,n(" 信息 => "),a(t,{to:"/guide/router-menu/#_8-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒏ 已经登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_9-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒐ 添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_10-%E8%B7%B3%E8%BD%AC%E9%87%8D%E5%AE%9A%E5%90%91"},{default:e(()=>[n("⒑ 跳转重定向")]),_:1})]),mn,s("p",null,[a(t,{to:"/guide/router-menu/#_1-%E8%B7%B3%E8%BD%AC%E8%B7%AF%E7%94%B1%E6%B8%85%E7%A9%BA%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82"},{default:e(()=>[n("⒈ 跳转路由清空所有的异步请求")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_2-%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%90%A6%E6%8E%88%E6%9D%83"},{default:e(()=>[n("⒉ 系统是否授权")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_3-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF"},{default:e(()=>[n("⒊ 获取系统信息")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_8-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒏ 已经登录、没有添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_9-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1"},{default:e(()=>[n("⒐ 添加动态路由")]),_:1}),n(" => "),a(t,{to:"/guide/router-menu/#_11-%E5%B7%B2%E7%BB%8F%E7%99%BB%E5%BD%95%E3%80%81%E5%B7%B2%E7%BB%8F%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2"},{default:e(()=>[n("⒒ 已经登录、已经添加动态路由进入页面")]),_:1})]),vn,bn])}const gn=i(k,[["render",En],["__file","index.html.vue"]]);export{gn as default};
