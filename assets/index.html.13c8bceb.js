import{_ as i,r,o as h,c as o,a as e,b as a,d,w as n,e as s}from"./app.cc3919a2.js";const l={},c=s('<h1 id="方法解析" tabindex="-1"><a class="header-anchor" href="#方法解析" aria-hidden="true">#</a> 方法解析</h1><h2 id="settab" tabindex="-1"><a class="header-anchor" href="#settab" aria-hidden="true">#</a> setTab</h2><p>更新保存在 <code>vuex</code> 中的标签列表，主要分为新增和编辑两种</p><h2 id="getgraphdata" tabindex="-1"><a class="header-anchor" href="#getgraphdata" aria-hidden="true">#</a> getGraphData</h2>',4),p=e("h2",{id:"getgraphdatabyid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getgraphdatabyid","aria-hidden":"true"},"#"),a(" getGraphDataById")],-1),b=e("code",null,"id",-1),u=e("code",null,"前端",-1),_=e("code",null,"json",-1),g=s('<p>如果是 <code>关系视图</code> 的情况下，还需要额外组装 <code>关系视图</code> 的数据</p><h2 id="assemblydata" tabindex="-1"><a class="header-anchor" href="#assemblydata" aria-hidden="true">#</a> assemblyData</h2><p>组装 <code>前端</code> 保存到后端的 <code>json</code> 字符串</p><h2 id="getgraphdatabyentiy" tabindex="-1"><a class="header-anchor" href="#getgraphdatabyentiy" aria-hidden="true">#</a> getGraphDataByEntiy</h2>',4),m=e("code",null,"实体",-1),f=e("h2",{id:"assemblydatabybackend",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#assemblydatabybackend","aria-hidden":"true"},"#"),a(" assemblyDataByBackend")],-1),y=e("code",null,"实体",-1),x=s('<h2 id="getgroup" tabindex="-1"><a class="header-anchor" href="#getgroup" aria-hidden="true">#</a> getGroup</h2><p>根据数据，获取实体和关系的分类，用来过滤实体和关系</p><h2 id="updategroup" tabindex="-1"><a class="header-anchor" href="#updategroup" aria-hidden="true">#</a> updateGroup</h2><p>更新分类</p><h2 id="assemblinggraphdata" tabindex="-1"><a class="header-anchor" href="#assemblinggraphdata" aria-hidden="true">#</a> assemblingGraphData</h2><p>获取当前画布的最新数据，并且组装数据</p><h2 id="save" tabindex="-1"><a class="header-anchor" href="#save" aria-hidden="true">#</a> save</h2>',7),v=e("code",null,"json",-1),D=e("h2",{id:"relationalviews",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#relationalviews","aria-hidden":"true"},"#"),a(" relationalViews")],-1),k=e("h2",{id:"dealrelationdata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#dealrelationdata","aria-hidden":"true"},"#"),a(" dealRelationData")],-1),B=e("p",null,"组装关系视图数据",-1);function G(w,N){const t=r("RouterLink");return h(),o("div",null,[c,e("p",null,[a("实现方式见"),d(t,{to:"/antv-g6-ipbd/data-stream/"},{default:n(()=>[a("数据流")]),_:1})]),p,e("p",null,[a("根据画布 "),b,a(" 获取存储在后端的数据。由于调用 "),d(t,{to:"/antv-g6-ipbd/main/#save"},{default:n(()=>[a("save")]),_:1}),a(" 方法时，是由 "),u,a(" 组装的 "),_,a(" 以字符串的形式保存给后端的，所以这里需要调用 "),d(t,{to:"/antv-g6-ipbd/main/#assemblydata"},{default:n(()=>[a("assemblyData")]),_:1}),a(" 来组装数据供画布使用。")]),g,e("p",null,[a("根据 "),m,a(" 获取相互之间的 N 度关系数据，经过 "),d(t,{to:"/antv-g6-ipbd/main/#assemblydatabybackend"},{default:n(()=>[a("assemblyDataByBackend")]),_:1}),a(" 来组装数据")]),f,e("p",null,[a("组装由 "),y,a(" 去后端获取的数据，区别于 "),d(t,{to:"/antv-g6-ipbd/main/#assemblydata"},{default:n(()=>[a("assemblydata")]),_:1})]),x,e("p",null,[a("保存画布数据，调用"),d(t,{to:"/antv-g6-ipbd/main/#assemblinggraphdata"},{default:n(()=>[a("assemblingGraphData")]),_:1}),a("并且将数据转换为 "),v,a(" 字符串保存到后端")]),D,e("p",null,[a("关系视图，首先调用"),d(t,{to:"/antv-g6-ipbd/main/#assemblinggraphdata"},{default:n(()=>[a("assemblingGraphData")]),_:1}),a("保存当前的普通视图数据，向后端获取数据后调用"),d(t,{to:"/antv-g6-ipbd/main/#dealrelationdata"},{default:n(()=>[a("dealRelationData")]),_:1}),a("组装关系视图数据。")]),k,B])}const R=i(l,[["render",G],["__file","index.html.vue"]]);export{R as default};
