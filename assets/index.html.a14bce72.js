import{_ as e,r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app.cc3919a2.js";const l={},u=p('<h1 id="单点登录" tabindex="-1"><a class="header-anchor" href="#单点登录" aria-hidden="true">#</a> 单点登录</h1><h2 id="前端实现步骤划分" tabindex="-1"><a class="header-anchor" href="#前端实现步骤划分" aria-hidden="true">#</a> 前端实现步骤划分</h2><p>先判断是否为单点登录，不为则直接返回不再进行任何逻辑处理，下面是单点登录的处理步骤</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>首先需要在后台配置 <code>distinguishVersion</code> 字段配合使用才可触发单点登录</p></div>',4),r={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso-config.js#L21",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"key",-1),d=n("code",null,"must",-1),v=n("code",null,"validateParams",-1),m=n("code",null,"loginAsync",-1),b=n("code",null,"getUserInfo",-1),g={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso.js#L6",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"sso-config",-1),h=n("code",null,"validateParams",-1),y=n("code",null,"loginAsync",-1),w={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso.js#L18",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"url",-1),x={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso.js#L30",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"window.location.replace",-1),S=n("code",null,"window.location.replace",-1),C=n("h2",{id:"主要代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#主要代码","aria-hidden":"true"},"#"),s(" 主要代码")],-1),V={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso-config.js",target:"_blank",rel:"noopener noreferrer"},U=p(`<details class="custom-container details"><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;./http&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">&#39;../api/user&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> UseUserStore <span class="token keyword">from</span> <span class="token string">&#39;@/stores/modules/user&#39;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * key: 1:默认,2:江苏省厅,3:河北(石家庄),4:四川省厅,5:内江市局,6:四川高新区,7:济南市局,8:甘肃省厅,9:兰州,10:乌市
 * 属性 validateParams: 校验对应参数是否存在
 * 属性 loginAsync: 对应的登陆方法
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">validateMust</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params<span class="token punctuation">,</span> must</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> mustLength <span class="token operator">=</span> must<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> mustLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>must<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    start<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ssoConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;4&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">must</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">validateParams</span><span class="token operator">:</span> validateMust<span class="token punctuation">,</span>
    <span class="token function-variable function">loginAsync</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">UseUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>tokenWsUniportalCheck<span class="token punctuation">,</span> <span class="token punctuation">{</span> params <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userStore<span class="token punctuation">.</span><span class="token function">setSystemData</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;isSSO&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;第三方登录成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">getUserInfo</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>userWsInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ssoConfig<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1),L={href:"http://192.168.1.123:10080/platform/qsdi/web-basic/-/blob/master/src/config/http/sso.js",target:"_blank",rel:"noopener noreferrer"},q=p(`<details class="custom-container details"><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getRegust <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ssoConfig <span class="token keyword">from</span> <span class="token string">&#39;./sso-config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> UseCommonStore <span class="token keyword">from</span> <span class="token string">&#39;@/stores/modules/common&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">ssoLogin</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token function">getRegust</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> commonStore <span class="token operator">=</span> <span class="token function">UseCommonStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> distinguishVersion <span class="token operator">=</span> commonStore<span class="token punctuation">.</span>systemConfig<span class="token punctuation">.</span>distinguishVersion<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token operator">!</span>distinguishVersion <span class="token operator">||</span>
    <span class="token operator">!</span>ssoConfig<span class="token punctuation">[</span>distinguishVersion<span class="token punctuation">]</span> <span class="token operator">||</span>
    <span class="token operator">!</span>ssoConfig<span class="token punctuation">[</span>distinguishVersion<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">validateParams</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> ssoConfig<span class="token punctuation">[</span>distinguishVersion<span class="token punctuation">]</span><span class="token punctuation">.</span>must<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> ssoConfig<span class="token punctuation">[</span>distinguishVersion<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">loginAsync</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>

  ssoConfig<span class="token punctuation">[</span>distinguishVersion<span class="token punctuation">]</span><span class="token punctuation">.</span>must<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> params<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> newUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>location<span class="token punctuation">.</span>origin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>location<span class="token punctuation">.</span>pathname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>location<span class="token punctuation">.</span>hash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[&quot;{}]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 替换历史记录项</span>
      window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>newUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ssoLogin<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="url-使用" tabindex="-1"><a class="header-anchor" href="#url-使用" aria-hidden="true">#</a> url 使用</h2><p>举个🌰</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>完整地址 http://127.0.0.1:8888/login?token=001

http://127.0.0.1:8888 域名

/login 要跳转的页面(这里是history模式)

?token=001 是需要的单点登录的必要参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function I(P,A){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("① "),n("a",r,[s("配置单点登录"),t(a)]),s(" 其中 "),k,s(" 应该对应配置的项目，"),d,s(" 为必须要在浏览器中的参数， "),v,s(" 为单点登录所需的参数校验，"),m,s(" 为单点登录需要异步登陆后的处理，"),b,s(" 为获取用户信息，权限等。")]),n("p",null,[s("② "),n("a",g,[s("获取url中的信息"),t(a)]),s(" 根据系统数据库中配置的信息和 "),f,s(" 文件中对比， 以及 "),h,s(" 校验通过，调用单点登录函数 "),y]),n("p",null,[s("③ "),n("a",w,[s("删除不需要显示在 "),_,s(" 中的参数"),t(a)])]),n("p",null,[s("④ "),n("a",x,[s("使用 "),j,s(" 跳转正确页面，"),S,s(" 可以替换浏览器历史记录项"),t(a)])]),C,n("p",null,[n("a",V,[s("sso-config.js"),t(a)])]),U,n("p",null,[n("a",L,[s("sso.js"),t(a)])]),q])}const E=e(l,[["render",I],["__file","index.html.vue"]]);export{E as default};
